
GradientBoostingClassifier:
  class: sklearn.ensemble.GradientBoostingClassifier
  params:
    n_estimators: [150, 250, 500]
    max_depth: [4, 5, 6]
    max_features: ["log2"]
    learning_rate: [0.01]
RandomForestClassifier:
  class: sklearn.ensemble.RandomForestClassifier
  params:
    n_estimators: [10, 20, 40, 80, 160, 320, 640]
    min_samples_leaf: [1, 2, 4, 8, 16]
    max_features: ["auto", "log2", null]
    criterion: ["gini", "entropy"]
LogisticRegression:
  class: sklearn.ensemble.GradientBoostingClassifier
  params:
     -
      penalty: ["l1"]
      C: [0.1, 1, 10, 100]
      solver: ["liblinear"]
     -
      penalty: ["l2"]
      C: [0.1, 1, 10, 100]
      solver: ["newton-cg", "lbfgs", "sag"]
SVC:
  class: sklearn.svm.SVC
  params:
     -
      kernel: ["rbf"]
      probability: [true]
      gamma: [0.001, 0.0001, "auto"]
      C: [0.1, 1, 10, 100]
     -
      kernel: ["linear"]
      probability: [true]
      C: [0.1, 1, 10, 100]
GaussianNB:
  class: sklearn.naive_bayes.GaussianNB
  params:
    alpha: [0.1, 1, 10]
BernoulliNB:
  class: sklearn.naive_bayes.BernouliNB
  params: {}
MultinomialNB:
  class: sklearn.naive_bayes.MultinomialNB
  params:
    alpha: [0.1, 1, 10]
